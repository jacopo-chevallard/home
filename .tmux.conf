# TMUX PLUGIN MANAGER
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# for vim
set -g @resurrect-strategy-vim 'session'

# Restoring bash history
set -g @resurrect-save-bash-history 'on'

# saving and restoring tmux pane contents
set -g @resurrect-capture-pane-contents 'on'

# Last saved environment is automatically restored when tmux is started.
set -g @continuum-restore 'on'

# Tmux is automatically started after the computer/server is turned on.
set -g @continuum-boot 'on'

# start iTerm in fullscreen
set -g @continuum-boot-options 'iterm,fullscreen'

# Restores pre-2.1 behavior of entering and exiting copy-mode with the scroll wheel.
set -g @plugin 'nhdaly/tmux-scroll-copy-mode'

# Default SHELL to use
set -g default-command /bin/zsh

# copy and paste for Mac OSX
set-option -g default-command "reattach-to-user-namespace -l /bin/zsh -l"

# look good
set -g default-terminal "screen-256color"

set -g prefix C-a
unbind C-b
bind C-a send-prefix

# a mouse
set-option -g mouse on

#setw -g mouse-select-window on
#setw -g mouse-select-pane on

# # Scroll History
set -g history-limit 10000

# Count sessions start at 1
set -g base-index 1

# act like vim
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+
unbind [
bind ` copy-mode
#bind -t vi-copy v begin-selection
#bind -t vi-copy y copy-selection

# after copying to a tmux buffer, hit y again to copy to clipboard
bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
bind N swap-window -t +1
bind P swap-window -t -1

# Reload .tmux.conf
#bind R source-file ~/.tmux.conf \; display-message "  Config reloaded.."

# Hit [PREFIX]-R to reorder windows (i..e from 1-4-7-9 to 1-2-3-4 keeping the right order)
bind R                                      \
    set -g renumber-windows on\;            \
    new-window\; kill-window\;              \
    set -g renumber-windows off\;           \
    display-message "Windows reordered..."

# Rename your terminals
#set -g set-titles on
#set -g set-titles-string '#(whoami)::#h::#(curl ipecho.net/plain;echo)'

bind E command-prompt -p "session?,message?" "run-shell \"tmux list-windows -t %1 \| cut -d: -f1\|xargs -I\{\} tmux send-keys -t %1:\{\} %2\""


# Status bar customization
# Set status bar
set -g status-justify left
set -g status-bg black
set -g status-fg white
set-option -g status-interval 5
set -g status-right-length 150
set -g status-left ""
set -g status-right "#[fg=green] %m-%d-%Y %H:%M #(whoami)                  " # Add space so I can see Growl notifications in full-screen mode

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use '<prefix>-a' <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

# Active window title color
setw -g window-status-current-style fg=white,bg=red

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
